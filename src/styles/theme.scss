@import '../../node_modules/@angular/material/_theming.scss';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$my-theme-primary: mat-palette($mat-cyan);
$my-theme-accent: mat-palette($mat-teal);

// The warn palette is optional (defaults to red).
$my-theme-warn: mat-palette($mat-red);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as `color` or `typography`.
$my-app-theme: mat-dark-theme(
  (
    color: (
      primary: $my-theme-primary,
      accent: $my-theme-accent,
      warn: $my-theme-warn,
    ),
  )
);

$my-second-theme-primary: mat-palette($mat-purple);
$my-second-theme-accent: mat-palette($mat-pink);
$my-second-theme-warn: mat-palette($mat-red);

$my-app-second-theme: mat-dark-theme(
  (
    color: (
      primary: $my-second-theme-primary,
      accent: $my-second-theme-accent,
      warn: $my-second-theme-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.my
.my-theme {
  @include angular-material-theme($my-app-theme);
}
.my-second-theme {
  @include angular-material-theme($my-app-second-theme);
}
